generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  coins        Int       @default(1000)
  createdAt    DateTime  @default(now())
  joins        Join[]
  spins        Spin[]
  transactions Transaction[]
}

model Wheel {
  id           Int       @id @default(autoincrement())
  title        String
  entry_fee    Int
  status       String    @default("PENDING") // PENDING | RUNNING | FINISHED | ABORTED
  joins        Join[]
  spins        Spin[]
  transactions Transaction[]
  createdAt    DateTime  @default(now())
  startsAt     DateTime?
  endsAt       DateTime?
  hostId       Int
  host         User      @relation(fields: [hostId], references: [id])
}

model Join {
  id           Int      @id @default(autoincrement())
  wheel        Wheel    @relation(fields: [wheelId], references: [id])
  wheelId      Int
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  eliminatedAt DateTime?
  joinedAt     DateTime @default(now())
}

model Spin {
  id      Int   @id @default(autoincrement())
  wheel   Wheel @relation(fields: [wheelId], references: [id])
  wheelId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  result  Int
  createdAt DateTime @default(now())
}

model Transaction {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  wheel   Wheel @relation(fields: [wheelId], references: [id])
  wheelId Int
  amount  Int
  kind    String // "entry_fee", "prize", "refund"
  meta    String?
  createdAt DateTime @default(now())
}

model Config {
  id               Int @id @default(1)
  winnerPoolPercent Int
  adminPoolPercent  Int
  appPoolPercent    Int
}

